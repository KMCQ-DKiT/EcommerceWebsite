{"ast":null,"code":"var _jsxFileName = \"E:\\\\paypal\\\\paypal\\\\client\\\\src\\\\components\\\\BuyCar.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport { SANDBOX_CLIENT_ID, PRODUCTION_CLIENT_ID, SERVER_HOST } from \"../config/global_constants\";\nimport PaypalButton from 'react-paypal-express-checkout';\nimport PayPalMessage from \"./PayPalMessage\";\nexport default class BuyCar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSuccess = paymentData => {\n      axios.post(\"\".concat(SERVER_HOST, \"/sales/\").concat(paymentData.paymentID, \"/\").concat(this.props.carID, \"/\").concat(this.props.price, \"/\").concat(paymentData.address.recipient_name, \"/\").concat(paymentData.email), {\n        headers: {\n          \"authorization\": localStorage.token,\n          \"Content-type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.SUCCESS,\n          payPalPaymentID: paymentData.paymentID,\n          redirectToPayPalMessage: true\n        });\n      }).catch(errorData => {\n        console.log(\"PayPal payment unsuccessful error:\", errorData);\n        this.setState({\n          payPalMessageType: PayPalMessage.messageType.ERROR,\n          redirectToPayPalMessage: true\n        });\n      });\n    };\n\n    this.onError = errorData => {\n      console.log(\"PayPal error:\", errorData);\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.ERROR,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.onCancel = cancelData => {\n      // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n      console.log(\"Payment cancelled by user:\", cancelData);\n      this.setState({\n        payPalMessageType: PayPalMessage.messageType.CANCEL,\n        redirectToPayPalMessage: true\n      });\n    };\n\n    this.state = {\n      redirectToPayPalMessage: false,\n      payPalMessageType: null,\n      payPalPaymentID: null\n    };\n  }\n\n  render() {\n    const environment = \"sandbox\"; // must be either \"sandbox\" or \"production\"\n\n    const client_id = {\n      sandbox: SANDBOX_CLIENT_ID,\n      production: PRODUCTION_CLIENT_ID\n    };\n    const redirect = \"/PayPalMessage/\".concat(this.state.payPalMessageType, \"/\").concat(this.state.payPalPaymentID);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, this.state.redirectToPayPalMessage ? React.createElement(Redirect, {\n      to: redirect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }) : null, React.createElement(PaypalButton, {\n      env: environment,\n      client: client_id,\n      currency: \"EUR\",\n      total: this.props.price,\n      onSuccess: this.onSuccess,\n      onError: this.onError,\n      onCancel: this.onCancel,\n      style: {\n        size: \"small\",\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:\\paypal\\paypal\\client\\src\\components\\BuyCar.js"],"names":["React","Component","axios","Redirect","SANDBOX_CLIENT_ID","PRODUCTION_CLIENT_ID","SERVER_HOST","PaypalButton","PayPalMessage","BuyCar","constructor","props","onSuccess","paymentData","post","paymentID","carID","price","address","recipient_name","email","headers","localStorage","token","then","res","setState","payPalMessageType","messageType","SUCCESS","payPalPaymentID","redirectToPayPalMessage","catch","errorData","console","log","ERROR","onError","onCancel","cancelData","CANCEL","state","render","environment","client_id","sandbox","production","redirect","size","color"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\nimport axios from \"axios\"\nimport {Redirect} from \"react-router-dom\"\n\nimport {SANDBOX_CLIENT_ID, PRODUCTION_CLIENT_ID, SERVER_HOST} from \"../config/global_constants\"\n\nimport PaypalButton from 'react-paypal-express-checkout'\nimport PayPalMessage from \"./PayPalMessage\"\n\nexport default class BuyCar extends Component \n{\n    constructor(props)\n    {\n        super(props)\n\n        this.state = {redirectToPayPalMessage:false,\n                      payPalMessageType:null,\n                      payPalPaymentID:null}\n    }\n    \n    \n    onSuccess = paymentData =>\n    {      \n        axios.post(`${SERVER_HOST}/sales/${paymentData.paymentID}/${this.props.carID}/${this.props.price}/${paymentData.address.recipient_name}/${paymentData.email}`, {headers:{\"authorization\":localStorage.token, \"Content-type\": \"multipart/form-data\"}})\n        .then(res => \n        {                   \n            this.setState({payPalMessageType:PayPalMessage.messageType.SUCCESS, \n                           payPalPaymentID:paymentData.paymentID, \n                           redirectToPayPalMessage:true}) \n        })\n        .catch(errorData =>\n        {\n            console.log(\"PayPal payment unsuccessful error:\", errorData)            \n            this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n                           redirectToPayPalMessage:true}) \n        })\n    }\n    \n    \n    onError = errorData => \n    {\n        console.log(\"PayPal error:\", errorData)\n        this.setState({payPalMessageType:PayPalMessage.messageType.ERROR, \n                       redirectToPayPalMessage:true})         \n    }\n    \n    \n    onCancel = cancelData => \n    {\n        // The user pressed the Paypal checkout popup window cancel button or closed the Paypal checkout popup window\n        console.log(\"Payment cancelled by user:\", cancelData)\n        this.setState({payPalMessageType:PayPalMessage.messageType.CANCEL, \n                       redirectToPayPalMessage:true})       \n    }\n    \n    \n    render() \n    {            \n        const environment = \"sandbox\"  // must be either \"sandbox\" or \"production\"\n        \n        const client_id = {sandbox:SANDBOX_CLIENT_ID,\n                           production:PRODUCTION_CLIENT_ID}\n\n        const redirect = `/PayPalMessage/${this.state.payPalMessageType}/${this.state.payPalPaymentID}`\n                \n        return (\n            <div>\n                {this.state.redirectToPayPalMessage ? <Redirect to= {redirect}/> : null}  \n                        \n                <PaypalButton \n                    env = {environment}\n                    client = {client_id}\n                \n                    currency = \"EUR\"\n                    total = {this.props.price}\n                \n                    onSuccess = {this.onSuccess}\n                    onError = {this.onError}               \n                    onCancel = {this.onCancel}                   \n            \n                    style={{size: \"small\", color: \"blue\"}}\n                />\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}